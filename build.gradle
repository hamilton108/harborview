apply plugin: 'java'

apply from: '/home/rcs/opt/java/gradlecommon/depversions.gradle'

group = 'hamilton108'
archivesBaseName = 'harborview'
version = '0.9'


ext.major = '5'
ext.minor = '3'
ext.parentDist = '/home/rcs/opt/java/harborview/dist'
ext.myName = "harborview"
ext.myLibName = "${myName}-${version}"

sourceSets.main.resources {
    srcDirs = ["src/main/resources", "src/main/webapp"]
}

repositories {
    mavenCentral()
}

configurations {
    aspectjTask
}

dependencies {
    compile project(':netfonds-repos')
    compile project(':critter-repos')
    compile project(':oahu')
    compile project(':vega')
    //------------------- Database -------------------
    runtime "org.mybatis:mybatis:$mybatisVersion"
    runtime "org.postgresql:postgresql:$postgresVersion"

    compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    compile "args4j:args4j:$args4jVersion"
    runtime "jline:jline:0.9.94"
    //------------------- spring -------------------
    runtime "org.springframework:spring-core:$springVersion"
    runtime "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-webmvc:${springVersion}"

    //------------------- Jetty -------------------
    compile "org.eclipse.jetty:jetty-servlet:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-webapp:${jettyVersion}"

    //------------------- Google Guava-------------------
    compile "com.google.guava:guava:25.1-jre";

    //------------------- Jackson -------------------
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    //------------------- Jetty -------------------
    // https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf-spring4
    compile "org.thymeleaf:thymeleaf-spring4:${thymeleafVersion}"
    compile "org.thymeleaf:thymeleaf:${thymeleafVersion}"




    //------------------- Aspectj -------------------
    compile "org.aspectj:aspectjrt:$aspectjVersion"
    aspectjTask "org.aspectj:aspectjweaver:$aspectjVersion"
    aspectjTask "org.aspectj:aspectjtools:$aspectjVersion"
}

task copydeps(type: Copy) {
    into 'dist' from configurations.runtime
}

//task setupDist << {
//    ant.symlink(resource: "../src/resources/log4j.xml", link: "dist/log4j.xml")
//    ant.symlink(resource: "../src/resources/public", link: "dist/public")
//    ant.symlink(resource: "../src/resources/templates", link: "dist/templates")
//    ant.symlink(resource: "../src/resources/harborview.xml", link: "dist/harborview.xml")
//    //ant.symlink(resource: "../src/clojure/harborview", link: "dist/harborview")
//    ant.symlink(resource: "../src/resources/dbcp.properties", link: "dist/dbcp.properties")
//    ant.symlink(resource: "../src/resources/mybatis.conf.xml", link: "dist/mybatis.conf.xml")
//    ant.symlink(resource: "../src/resources/koteriku-dbcp.properties", link: "dist/koteriku-dbcp.properties")
//    ant.symlink(resource: "../src/resources/koteriku-mybatis.conf.xml", link: "dist/koteriku-mybatis.conf.xml")
//    ant.symlink(resource: "../src/resources/ranoraraku-dbcp.properties", link: "dist/ranoraraku-dbcp.properties")
//    ant.symlink(resource: "../src/resources/ranoraraku-mybatis.conf.xml", link: "dist/ranoraraku-mybatis.conf.xml")
//}


String clazzPath() {
    def runt = configurations.runtime.files.collect { f ->
        f.name
    }
    /*
    def aopt = configurations.aspectjTask.files.collect { f ->
        f.name
    }
    */

    runt.remove(myLibName)

    /*
    aopt.each {
        runt.add(it)
    }
    */
    runt.add(".")
    runt.join(" ")
}

task printClazzPath << {
    println clazzPath()
}

jar {
    manifest {
        attributes 'Main-Class': "harborview.service.EmbeddedJetty"
        attributes 'Class-Path': clazzPath()
    }
    //from ("target/classes") include "**/*.class"
}
