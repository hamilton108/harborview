#!/bin/bash


usage()
{
cat << EOF
usage: $0 options

OPTIONS:
   -h      Show this message
   -o      --optimize flag
   -i      Module index (1: Charts, 2: Options, 3: OptionPurchase, 4: Critters)
EOF
}

EV="1"
MODULE=
OPTIMIZE="0"
while getopts “ho:i:” OPTION
do
     case $OPTION in
         h)
             usage
             exit 1
             ;;
         i)
             OTPIMIZE="1"
             ;;
         i)
             MODULE=$OPTARG
             ;;
         ?)
             usage
             exit
             ;;
     esac
done

DOCKER_IMG="rcs/elm:0.19"

case $MODULE in

    1) ELM="src/Maunaloa/Charts.elm"
       JS="elm-charts.js"
       TODIR="maunaloa"
        ;;

    2) ELM="src/Maunaloa/Options/Main.elm"
       JS="elm-options.js"
       TODIR="maunaloa"
        ;;

    3) ELM="src/Maunaloa/OptionPurchases.elm"
       JS="elm-optionpurchases.js"
       TODIR="maunaloa"
        ;;

    4) ELM="src/Critters/Main.elm"
       JS="elm-critters.js"
       TODIR="critters"
        ;;

    5) ELM="src/Vinapu/Projects.elm"
       JS="elm-projects.js"
       TODIR="vinapu"
        ;;
esac

if [ "$OPTIMIZE" = "1"]; then
  docker run -it --rm -v "$(pwd):/code" -v "/tmp:/tmp" -w "/code" -e "HOME=/tmp" -u $UID:$GID $DOCKER_IMG make $ELM --output $JS
else
  docker run -it --rm -v "$(pwd):/code" -v "/tmp:/tmp" -w "/code" -e "HOME=/tmp" -u $UID:$GID $DOCKER_IMG make $ELM --output $JS
fi

cp $JS ../src/main/webapp/js/$TODIR/$JS

exit 0
